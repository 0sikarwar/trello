{"version":3,"sources":["icons/close.svg","pages/test/Header.jsx","pages/test/SideContainer.jsx","pages/test/Board.jsx","pages/test/AddListOfStatus.jsx","pages/test/CreateNewBoard.jsx","pages/test/PersonalBoardsContainer.jsx","pages/test/BoardsContainer.jsx","pages/test/MainContainer.jsx","pages/test/index.jsx","pages/test/boardDetails/Task.jsx","pages/test/boardDetails/DivHeader.jsx","pages/test/boardDetails/AddTask.jsx","pages/test/boardDetails/AddStatus.jsx","pages/test/boardDetails/ListTasks.jsx","pages/test/boardDetails/index.jsx","Routes.jsx","index.jsx"],"names":["_path","Header","className","React","Component","SideContainer","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgClose","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","ref","id","fill","fillOpacity","fillRule","d","ForwardRef","Board","state","recentlyViewed","hendleClick","setState","onBoardClick","removeBoard","e","preventDefault","stopPropagation","to","onClick","isRecentViewedContainer","name","AddListOfStatus","newStatus","statusList","v1","removeStatusFromList","index","findIndex","status","splice","updateStatusList","changeNewStatus","value","addStatus","push","map","removeStatus","bind","type","placeholder","onChange","Status","CreateNewBoard","inputName","updateInputName","SaveNewBoardName","SendNewBoard","createBoardModal","focus","toggleCreateNewBoardModal","onSubmit","PersonalBoardsContainer","openCreateNewBoardModal","board","updateRecentViewed","PushNewBoardInArray","boardList","BoardsContainer","boards","recentBoards","recentViewedBoards","recentlyViewedBoard","unshift","localStorage","setItem","JSON","stringify","newBoard","tasks","personalBoards","removeFromRecent","parse","getItem","MainContainer","Home","Task","text","display","currentTask","sendToPrev","prevStatus","sendToNext","nextStatus","DivHeader","editable","toggleEditable","setNewStatus","newStatusText","innerHTML","changeStatusForItem","checkEnterKey","charCode","onDoubleClick","contentEditable","onBlur","onKeyPress","openCreateNewStatus","AddTask","inputTaskText","task","changeTaskText","createTask","addTask","AddStatus","addStatusAfter","toggleShowAddStatusModal","createStatusModal","ToDoTasks","newTask","addToBoard","console","log","nextStatusId","prevStatusId","showAddStatusModal","updatedStatusText","updateStatusName","addStatusAfterCurrent","statusId","currentStatusId","statusName","nextProps","changedValue","fieldNameToChange","boardId","recentIndex","currentBoard","indexOfChange","currentId","showToast","toastMsg","setTimeout","hideToast","match","params","showError","find","Routes","exact","path","component","Test","boardDetails","renderRoot","ReactDOM","render","history","context","document","getElementById","module","hot","accept"],"mappings":"uIAAIA,E,kECEiBC,E,4JACjB,WACI,OACI,qBAAKC,UAAU,0CAAf,SACI,8C,GAJoBC,IAAMC,WCArBC,E,4JACjB,WACI,OACI,qBAAKH,UAAU,sBAAf,gC,GAH+BC,IAAMC,W,eFA7CE,EAAY,CAAC,QAAS,WAE1B,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAASoB,EAASC,EAAMC,GACtB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQd,EAAyBU,EAAMzB,GAE3C,OAAoB,gBAAoB,MAAOC,EAAS,CACtD6B,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTC,IAAKR,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DQ,GAAIP,GACHD,GAAS,KAAMjC,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3E0C,KAAM,UACNC,YAAa,KACbC,SAAU,UACVC,EAAG,iJAIP,IAAIC,EAA0B,aAAiBhB,G,GAChC,I,OG/BMiB,E,4MACjBC,MAAO,CACHC,gBAAiB,G,EAErBC,YAAc,WACV,EAAKC,SAAU,CACXF,gBAAiB,IAErB,EAAKd,MAAMiB,gB,EAEfC,YAAc,SAACC,GACXA,EAAEC,iBACFD,EAAEE,kBACF,EAAKrB,MAAMkB,e,4CAEf,WACI,OACI,eAAC,IAAD,CAAMI,GAAI,iBAAkBrC,KAAKe,MAAMM,GAAIvC,UAAU,gGAAgGwD,QAAWtC,KAAKe,MAAMwB,wBAA0B,KAAOvC,KAAK8B,YAAjN,UACI,6BAAK9B,KAAKe,MAAMyB,OAChB,cAAC,EAAD,CAAW1D,UAAU,uBAAuBwD,QAAUtC,KAAKiC,qB,GAnBxClD,IAAMC,WCFpByD,E,4MACjBb,MAAQ,CACJc,UAAW,GACXC,WAAa,CACT,CACItB,GAAKuB,cACLJ,KAAO,QAEX,CACInB,GAAKuB,cACLJ,KAAO,SAEX,CACInB,GAAKuB,cACLJ,KAAO,U,EAInBK,qBAAuB,SAACxB,GACpB,IAAMsB,EAAa,EAAKf,MAAMe,WACxBG,EAAQH,EAAWI,WAAU,SAACC,GAChC,OAAOA,EAAO3B,KAAOA,KAEzBsB,EAAWM,OAAOH,EAAM,GACxB,EAAKf,SAAS,CACVY,eACD,WACC,EAAK5B,MAAMmC,iBAAiB,EAAKtB,MAAMe,gB,EAG/CQ,gBAAkB,SAACjB,GACf,EAAKH,SAAS,CACVW,UAAYR,EAAE5C,OAAO8D,S,EAG7BC,UAAY,WACR,IAAMV,EAAU,YAAO,EAAKf,MAAMe,YAI5BK,EAAS,CACX3B,GAAIuB,cACJJ,KAAM,EAAKZ,MAAMc,WAErBC,EAAWW,KAAKN,GAChB,EAAKjB,SAAS,CACVW,UAAU,GACVC,WAAW,YAAIA,KAChB,WACC,EAAK5B,MAAMmC,iBAAiB,EAAKtB,MAAMe,gB,4CAK/C,WAAS,IAAD,OACJ,OACI,sBAAK7D,UAAU,6BAAf,UACA,qBAAKA,UAAW,aAAhB,2CAEQkB,KAAK4B,MAAMe,WAAWY,KAAI,SAACP,GACvB,OACI,cAAC,EAAD,CACAR,KAAQQ,EAAOR,KAEfgB,aAAgB,EAAKX,qBAAqBY,KAAK,EAAKT,EAAO3B,KADrD2B,EAAO3B,OAMzB,sBAAKvC,UAAW,4CAAhB,UACI,uBAAO4E,KAAK,OAAO5E,UAAU,sCAAsC6E,YAAY,sBAAsBC,SAAU5D,KAAKmD,gBAAiBC,MAAOpD,KAAK4B,MAAMc,YACvJ,qBAAK5D,UAAW,iCAAkCkB,KAAK4B,MAAMc,UAAU,iBAAiB,IAAMJ,QAAUtC,KAAK4B,MAAMc,UAAU1C,KAAKqD,UAAU,KAA5I,yB,GAvEyBtE,IAAMC,WA+E7C6E,E,4JACF,WACI,OACI,sBAAK/E,UAAW,iDAAhB,UACI,qBAAKA,UAAU,iBAAf,SAAiCkB,KAAKe,MAAMyB,OAEpB,SAAnBxC,KAAKe,MAAMyB,MACZ,qBAAK1D,UAAU,+BAA+BwD,QAAUtC,KAAKe,MAAMyC,aAAnE,sB,GAPCzE,IAAMC,WC7EN8E,E,4MACjBlC,MAAQ,CACJmC,UAAY,GACZpB,WAAa,CACT,CACItB,GAAKuB,cACLJ,KAAO,QAEX,CACInB,GAAKuB,cACLJ,KAAO,SAEX,CACInB,GAAKuB,cACLJ,KAAO,U,EAInBwB,gBAAkB,SAAC9B,GACf,EAAKH,SAAS,CACVgC,UAAY7B,EAAE5C,OAAO8D,S,EAG7Ba,iBAAiB,WACb,EAAKlD,MAAMmD,aAAa,EAAKtC,Q,EAEjCsB,iBAAmB,SAACP,GAChB,EAAKZ,SAAS,CACVY,gB,4CAGR,WACI,OACI,sBAAK7D,UAAU,2CAA2CsC,IAAO,SAAA+C,GAAgB,OAAGA,GAAoBA,EAAiBC,SAAzH,UACI,cAAC,EAAD,CAAWtF,UAAU,sBAAsBwD,QAAUtC,KAAKe,MAAMsD,4BAChE,uBAAMC,SAAUtE,KAAK4B,MAAMmC,UAAU/D,KAAKiE,iBAAiB,KAAMnF,UAAY,gDAA7E,UAEI,uBACI4E,KAAK,OACLC,YAAc,0BACdP,MAASpD,KAAK4B,MAAMmC,UACpBH,SAAY5D,KAAKgE,gBACjBlF,UAAY,sDAEhB,cAAC,EAAD,CAAiBoE,iBAAoBlD,KAAKkD,mBAC1C,uBACIQ,KAAK,SACLN,MAAQ,eACRtE,UAAY,uBAAwBkB,KAAK4B,MAAMmC,UAAU,cAAc,YACvEzB,QAAWtC,KAAK4B,MAAMmC,UAAU/D,KAAKiE,iBAAiB,iB,GAjDlClF,IAAMC,WCA7BuF,E,4MACjB3C,MAAO,CACH4C,yBAA0B,G,EAE9BxC,aAAc,SAACyC,GAEX,EAAK1D,MAAM2D,mBAAmBD,I,EAElCJ,0BAA4B,WACxB,EAAKtC,SAAS,CACVyC,yBAAyB,EAAK5C,MAAM4C,2B,EAG5CN,aAAe,SAACO,GACZ,EAAKJ,4BACL,EAAKtD,MAAM4D,oBAAoBF,I,4CAEnC,WAAS,IAAD,OACJ,OACI,gCACI,6BAAKzE,KAAKe,MAAMF,QAChB,sBAAK/B,UAAU,oDAAf,UAEIkB,KAAKe,MAAM6D,UAAUrB,KAAI,SAACkB,EAAM3B,GAC5B,OACI,cAAC,EAAD,CACIN,KAAOiC,EAAMjC,KACbnB,GAAMoD,EAAMpD,GAEZkB,wBAA2B,EAAKxB,MAAMwB,wBACtCP,aAAgB,EAAKA,aAAayB,KAAK,EAAKgB,GAC5CxC,YAAe,EAAKlB,MAAMkB,YAAYwB,KAAK,EAAKgB,EAAMpD,KAHhDyB,MASlB9C,KAAK4B,MAAM4C,yBAA2B,qBAAK1F,UAAU,eAAf,SACtC,cAAC,EAAD,CACIuF,0BAA6BrE,KAAKqE,0BAClCH,aAAgBlE,KAAKkE,kBAKxBlE,KAAKe,MAAMwB,yBAA2B,qBAAKzD,UAAY,mGACxDwD,QAAStC,KAAKqE,0BADyB,yB,GA7CNtF,IAAMC,WCAtC6F,E,kDACjB,aAAc,IAAD,EAELC,EACAC,EAHK,qBACT,gBAgBJL,mBAAqB,SAACD,GAClB,IAAMO,EAAqB,EAAKpD,MAAMoD,mBAChClC,EAAQkC,EAAmBjC,WAAU,SAACkC,GACxC,OAAOR,EAAMpD,KAAO4D,EAAoB5D,MAEzCyB,GAAS,GACRkC,EAAmB/B,OAAOH,EAAM,GAEpCkC,EAAmBE,QAAQT,GAC3B,EAAK1C,SAAS,CACViD,uBAEJG,aAAaC,QAAQ,qBAAqBC,KAAKC,UAAUN,KA7BhD,EA+BbL,oBAAsB,SAACY,GACnB,IAAMd,EAAQ,CACVpD,GAAGuB,cACHJ,KAAO+C,EAASxB,UAChBpB,WAAU,YAAO4C,EAAS5C,YAC1B6C,MAAQ,IAEPC,EAAiB,EAAK7D,MAAM6D,eAClCA,EAAenC,KAAKmB,GACpB,EAAK1C,SAAS,CACb0D,mBAEDN,aAAaC,QAAQ,iBAAiBC,KAAKC,UAAUG,KA3C3C,EA6CbxD,YAAc,SAACZ,GACX,IAAMoE,EAAiB,EAAK7D,MAAM6D,eAC5B3C,EAAM2C,EAAe1C,WAAU,SAAC0B,GAClC,OAAOA,EAAMpD,KAAKA,KAEtBoE,EAAexC,OAAOH,EAAM,GAC5B,EAAKf,SAAS,CACV0D,mBAEJ,EAAKC,iBAAiBrE,GACtB8D,aAAaC,QAAQ,iBAAiBC,KAAKC,UAAUG,KAvD5C,EAyDbC,iBAAmB,SAACrE,GAChB,IAAM2D,EAAqB,EAAKpD,MAAMoD,mBAChClC,EAAMkC,EAAmBjC,WAAU,SAAC0B,GACtC,OAAOA,EAAMpD,KAAKA,KAEtB2D,EAAmB/B,OAAOH,EAAM,GAChC,EAAKf,SAAS,CACViD,uBAEJG,aAAaC,QAAQ,qBAAqBC,KAAKC,UAAUN,KA9DzD,IACIF,EAASO,KAAKM,MAAMR,aAAaS,QAAQ,mBACzCb,EAAeM,KAAKM,MAAMR,aAAaS,QAAQ,uBAElD,MAAM1D,GACH4C,EAASA,GAAU,GACnBC,EAAeA,GAAgB,GAV1B,OAYT,EAAKnD,MAAQ,CACT6D,eAAgBX,GAAU,GAC1BE,mBAAmBD,GAAgB,IAd9B,E,0CAqEb,WACI,OACI,sBAAKjG,UAAU,gCAAf,UAEQkB,KAAK4B,MAAMoD,mBAAmBvF,OAAS,GACvC,cAAC,EAAD,CACImF,UAAa5E,KAAK4B,MAAMoD,mBACxBzC,yBAA0B,EAC1B1B,MAAO,yBACPoB,YAAcjC,KAAK0F,mBAG3B,cAAC,EAAD,CACId,UAAa5E,KAAK4B,MAAM6D,eACxBf,mBAAsB1E,KAAK0E,mBAC3BnC,yBAA0B,EAC1B1B,MAAO,kBACP8D,oBAAuB3E,KAAK2E,oBAC5B1C,YAAcjC,KAAKiC,cAEvB,qBAAKnD,UAAU,mB,GA1FcC,IAAMC,WCD9B6G,E,4JACjB,WACI,OACI,sBAAK/G,UAAU,cAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,W,GAL2BC,IAAMC,WCC5B8G,E,4JAClB,WACE,OACE,sBAAKhH,UAAU,GAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,W,GALyBC,IAAMC,WCFnB+G,E,4MACjBnE,MAAQ,CACJoE,KAAO,I,4CAEX,WACI,OACI,8BAEQhG,KAAKe,MAAMkF,SACX,sBAAKnH,UAAU,wDAAf,UACA,qBAAKA,UAAU,gBAAf,SAAgCkB,KAAKe,MAAMmF,YAAY1D,OACvD,gCACI,qBAAKF,QAAStC,KAAKe,MAAMoF,WAAYrH,UAAU,8BAA/C,SAAuG,WAAzBkB,KAAKe,MAAMqF,WAAuB,aAAcpG,KAAKe,MAAMqF,WAAa,WACtJ,qBAAK9D,QAAWtC,KAAKe,MAAMsF,WAAYvH,UAAU,8BAAjD,SAAwG,WAAxBkB,KAAKe,MAAMuF,WAAsB,aAActG,KAAKe,MAAMuF,WAAa,uB,GAb7IvH,IAAMC,WCAnBuH,E,4MACjB3E,MAAO,CACH4E,UAAS,G,EAEbC,eAAiB,WACb,EAAK1E,SAAS,CACVyE,UAAU,EAAK5E,MAAM4E,Y,EAG7BE,aAAe,SAACxE,GACZ,EAAKuE,iBACL,IAAME,EAAgBzE,EAAE5C,OAAOsH,UAC/B,EAAK7F,MAAM8F,oBAAoBF,EAAc,EAAK5F,MAAMM,K,EAI5DyF,cAAgB,SAAC5E,GACK,KAAfA,EAAE6E,UACD,EAAKL,aAAaxE,I,4CAG1B,WACI,OACI,sBAAKpD,UAAU,oDAAf,UACI,qBAAKA,UAAU,kCACX+B,MAAQ,uBACRmG,cAAiBhH,KAAKyG,eACtBQ,gBAAmBjH,KAAK4B,MAAM4E,SAC9BU,OAAQlH,KAAK0G,aACbS,WAAanH,KAAK8G,cALtB,SAOK9G,KAAKe,MAAMiF,OAEhB,qBAAKlH,UAAY,2EACb+B,MAAM,oBACNyB,QAAWtC,KAAKe,MAAMqG,oBAF1B,eAMA,qBAAKtI,UAAY,gFACb+B,MAAM,2BACNyB,QAAWtC,KAAKe,MAAMyC,aAF1B,sB,GAvCuBzE,IAAMC,W,QCCxBqI,E,4MACjBzF,MAAM,CACF0F,cAAgB,I,EAEpBC,KAAK,CACDlG,GAAK,GACLmB,KAAO,GACPQ,OAAS,EAAKjC,MAAMiC,Q,EAGxBwE,eAAiB,SAACtF,GACd,IAAMoF,EAAgBpF,EAAE5C,OAAO8D,MAC/B,EAAKrB,SAAS,CACVuF,mB,EAIRG,WAAa,SAACvF,GACVA,EAAEC,iBACF,IAAMoF,EAAK,eAAK,EAAKA,MACrBA,EAAK/E,KAAK,EAAKZ,MAAM0F,cACrBC,EAAKlG,GAAKuB,cACV,EAAKb,SAAS,CACVuF,cAAgB,KAClB,WACE,EAAKvG,MAAM2G,QAAQH,O,4CAM3B,WACI,OACI,uBAAMjD,SAAUtE,KAAKyH,WAAY3I,UAAU,mBAA3C,UACI,uBAAO4E,KAAK,OACR5E,UAAY,gCACZ8E,SAAW5D,KAAKwH,eAAgBpE,MAAOpD,KAAK4B,MAAM0F,cAClD3D,YAAc,6BAElB,uBAAOD,KAAK,SACR5E,UAAW,uBAAyBkB,KAAK4B,MAAM0F,cAAgB,SAAW,YAC1ElE,MAAM,WACNd,QAAWtC,KAAK4B,MAAM0F,cAAetH,KAAKyH,WAAW,c,GA1CpC1I,IAAMC,WCAtB2I,E,4MACjB/F,MAAQ,CACJmC,UAAY,I,EAEhBC,gBAAkB,SAAC9B,GACf,EAAKH,SAAS,CACVgC,UAAY7B,EAAE5C,OAAO8D,S,EAG7BwE,eAAiB,SAAC1F,GACdA,EAAEC,iBACF,EAAKpB,MAAM6G,eAAe,EAAKhG,MAAMmC,WACrC,EAAKhC,SAAS,CACVgC,UAAY,IACd,EAAKhD,MAAM8G,2B,4CAGjB,WACI,OACI,qBAAK/I,UAAU,WAAf,SACI,sBAAKA,UAAU,2CAA2CsC,IAAO,SAAA0G,GAAiB,OAAGA,GAAqBA,EAAkB1D,SAA5H,UACI,cAAC,EAAD,CAAWtF,UAAU,sBAAsBwD,QAAUtC,KAAKe,MAAM8G,2BAChE,uBAAMvD,SAAUtE,KAAK4B,MAAMmC,UAAU/D,KAAK4H,eAAe,KAAM9I,UAAY,gDAA3E,UAEI,uBACI4E,KAAK,OACLC,YAAc,2BACdP,MAASpD,KAAK4B,MAAMmC,UACpBH,SAAY5D,KAAKgE,gBACjBlF,UAAY,sDAEhB,uBACI4E,KAAK,SACLN,MAAQ,oBACRtE,UAAY,uBAAwBkB,KAAK4B,MAAMmC,UAAU,cAAc,YACvEzB,QAAWtC,KAAK4B,MAAMmC,UAAU/D,KAAK4H,eAAe,mB,GAnCzC7I,IAAMC,WCIxB+I,E,kDACjB,WAAahH,GAAO,IAAD,8BACf,cAAMA,IAYV2G,QAAU,SAACM,GACP,IAAMxC,EAAK,YAAO,EAAK5D,MAAM4D,OAI7BA,EAAMlC,KAAK0E,GACX,EAAKjG,SAAS,CACVyD,UACF,WACE,EAAKzE,MAAMkH,WAAWzC,EAAM,aAtBjB,EAmCnBa,WAAa,SAAChF,GACV,IAAMmE,EAAK,YAAM,EAAK5D,MAAM4D,OAC5B0C,QAAQC,IAAI,wBAAwB,EAAKpH,MAAM4B,YAC/C,IAAMG,EAAM0C,EAAMzC,WAAU,SAACwE,GACzB,OAAOA,EAAKlG,KAAOA,KAEQ,OAA5B,EAAKO,MAAMwG,aACV5C,EAAMvC,OAAOH,EAAM,GAEnB0C,EAAM1C,GAAOE,OAAS,EAAKpB,MAAMwG,aAErC,EAAKrG,SAAS,CACVyD,UACF,WACE,EAAKzE,MAAMkH,WAAWzC,EAAM,aAjDjB,EAqDnBW,WAAa,SAAC9E,GACV,IAAMmE,EAAK,YAAM,EAAK5D,MAAM4D,OACtB1C,EAAM0C,EAAMzC,WAAU,SAACwE,GACzB,OAAOA,EAAKlG,KAAOA,KAEQ,OAA5B,EAAKO,MAAMyG,aACV7C,EAAMvC,OAAOH,EAAM,GAEnB0C,EAAM1C,GAAOE,OAAS,EAAKpB,MAAMyG,aAErC,EAAKtG,SAAS,CACVyD,UACF,WACE,EAAKzE,MAAMkH,WAAWzC,EAAM,aAlEjB,EAqEnBqC,yBAA0B,WACtB,EAAK9F,SAAS,CACVuG,oBAAsB,EAAK1G,MAAM0G,sBAvEtB,EA2EnBzB,oBAAsB,SAAC0B,EAAkBlH,GACrC,EAAKN,MAAMyH,iBAAiBD,EAAkBlH,IA5E/B,EA8EnBuG,eAAiB,SAACjB,GACf,IAAMjE,EAAU,CACXrB,GAAKuB,cACLJ,KAAOmE,GAEX,EAAK5F,MAAM0H,sBAAsB/F,EAAU,EAAKd,MAAM8G,WAjFvD,EAAK9G,MAAM,CACN4D,MAAK,YAAO,EAAKzE,MAAMyE,OACvBkD,SAAW,EAAK3H,MAAM4H,gBACtBC,WAAY,EAAK7H,MAAM6H,WACvBtC,WAAY,EAAKvF,MAAMuF,WACvB8B,aAAc,EAAKrH,MAAMqH,aACzBhC,WAAY,EAAKrF,MAAMqF,WACvBiC,aAAc,EAAKtH,MAAMsH,aACzBC,oBAAqB,GAVV,E,0CAsFnB,WAAS,IAAD,OACJ,OACI,sBAAKxJ,UAAU,0DAAf,UACI,cAAC,EAAD,CACAkH,KAAMhG,KAAK4B,MAAMgH,WACjBvH,GAAMrB,KAAK4B,MAAM8G,SACjBtB,oBAAuBpH,KAAK6H,yBAC5BhB,oBAAuB7G,KAAK6G,oBAC5BrD,aAAexD,KAAKe,MAAMyC,aAAaC,KAAKzD,KAAKA,KAAK4B,MAAM8G,YAGxD1I,KAAK4B,MAAM0G,oBACX,cAAC,EAAD,CACAT,yBAA4B7H,KAAK6H,yBACjCD,eAAkB5H,KAAK4H,iBAIvB5H,KAAK4B,MAAM4D,MAAMjC,KAAI,SAACgE,EAAKzE,GACxB,OAAQ,cAAC,EAAD,CACPoD,YAAcqB,EACdtB,QAAU,EAAKrE,MAAM8G,WAAanB,EAAKvE,OACvCA,OAAU,EAAKpB,MAAMgH,WACrBtC,WAAc,EAAK1E,MAAM0E,WACzBF,WAAa,EAAKxE,MAAMwE,WAExBC,WAAa,EAAKA,WAAW5C,KAAK,EAAK8D,EAAKlG,IAC5C8E,WAAa,EAAKA,WAAW1C,KAAK,EAAK8D,EAAKlG,KAFrCkG,EAAKlG,OAQfrB,KAAK4B,MAAM8G,WAAa1I,KAAKe,MAAM4B,WAAW,GAAGtB,IAClD,cAAC,EAAD,CACIqG,QAAS1H,KAAK0H,QACd1E,OAAQhD,KAAKe,MAAM4B,WAAW,GAAGtB,W,uCAjGrD,SAAgCwH,EAAW9H,GACvC,MAAO,CACHyE,MAAOqD,EAAUrD,MACjBoD,WAAYC,EAAUD,WACtBtC,WAAYuC,EAAUvC,WACtBF,WAAYyC,EAAUzC,WACtBgC,aAAcS,EAAUT,aACxBC,aAAeQ,EAAUR,kB,GAjCEtJ,IAAMC,WCFxB8G,E,kDACnB,WAAY/E,GAAO,IAAD,uBAChB,cAAMA,IAyBRkH,WAAa,SAACa,EAAaC,GACzBb,QAAQC,IAAI,0CAA0CY,EAAmB,yBAAyBD,GAElG,IAEI/D,EAFED,EAAQ,EAAKlD,MAAMkD,OACnBkE,EAAU,EAAKpH,MAAMoH,QAGrBlG,EAAQgC,EAAO/B,WAAU,SAAC0B,GAC9B,OAAOA,EAAMpD,KAAO2H,KAEtBlE,EAAOhC,GAAOiG,GAAd,YAAqCD,GACrC3D,aAAaC,QAAQ,iBAAiBC,KAAKC,UAAUR,IAErD,IACEC,EAAeM,KAAKM,MAAMR,aAAaS,QAAQ,wBAA0B,GAC1E,MAAM1D,GACL6C,EAAe,GAEjB,IAAMkE,EAAclE,EAAahC,WAAU,SAAC0B,GAC1C,OAAOA,EAAMpD,KAAO2H,KAEnBC,GAAe,EAChBlE,EAAakE,GAAaF,GAA1B,YAAiDD,GAEjD/D,EAAazB,KAAKwB,EAAOhC,IAE3BgC,EAAOxB,OACP6B,aAAaC,QAAQ,qBAAqBC,KAAKC,UAAUP,IACzD,EAAKhD,SAAS,CACZ+C,YAvDc,EA2DlB0D,iBAAkB,SAACD,EAAkBlH,GACnC,IAAMsB,EAAa,EAAKf,MAAMsH,aAAavG,WACrCwG,EAAgBxG,EAAWI,WAAU,SAACC,GAC1C,OAAOA,EAAO3B,KAAOA,KAEvBsB,EAAWwG,GAAe3G,KAAO+F,EACjC,EAAKN,WAAWtF,EAAW,eAjEX,EAoElB8F,sBAAuB,SAAC/F,EAAU0G,GAChC,IAAMzG,EAAa,EAAKf,MAAMsH,aAAavG,WACrCwG,EAAgBxG,EAAWI,WAAU,SAACC,GAC1C,OAAOA,EAAO3B,KAAO+H,KAEvBzG,EAAWM,OAAOkG,EAAc,EAAE,EAAEzG,GACpC,EAAKuF,WAAWtF,EAAW,eA1EX,EA4ElBa,aAAe,SAACnC,GACd,IAAMsB,EAAa,EAAKf,MAAMsH,aAAavG,WAC3C,GAAyB,IAAtBA,EAAWlD,OACZ,EAAKsC,SAAS,CACZsH,WAAW,EACXC,SAAW,iEACV,WACDC,YAAW,WACT,EAAKC,cACJ,YAEF,CACH,IAAIL,EAAgBxG,EAAWI,WAAU,SAACC,GACxC,OAAOA,EAAO3B,KAAOA,KAEV,EAAKO,MAAMsH,aAAa1D,MACXzC,WAAU,SAACwE,GACnC,OAAOA,EAAKvE,SAAW3B,KAER,GACfsB,EAAWM,OAAOkG,EAAc,GAChC,EAAKlB,WAAWtF,EAAW,eAE3B,EAAKZ,SAAS,CACZsH,WAAW,EACXC,SAAW,8DACV,WACDC,YAAW,WACT,EAAKC,cACJ,UAzGO,EA8GlBA,UAAY,WACV,EAAKzH,SAAS,CACZsH,WAAW,EACXC,SAAS,MA/GX,IAEIxE,EAFEkE,EAAQ,EAAKjI,MAAM0I,MAAMC,OAAOrI,GAClCsI,GAAY,EAEhB,IACI7E,EAASO,KAAKM,MAAMR,aAAaS,QAAQ,oBAAsB,GAElE,MAAM1D,GACH4C,EAASA,GAAU,GAEvB,IAAMoE,EAAepE,EAAO8E,MAAK,SAACnF,GAChC,OAAOA,EAAMpD,KAAK2H,KAZJ,OAcZE,IACFS,GAAW,GAEb,EAAK/H,MAAM,CACT+H,UAAUA,EACV7E,OAAOA,EACPkE,QAAQA,EACRE,aAAeA,EACfG,WAAY,EACZC,SAAW,IAvBG,E,0CAqHjB,WAAU,IAAD,OACP,OAAGtJ,KAAK4B,MAAM+H,UAET,eAAC,IAAD,CAAMtH,GAAG,IAAT,UACE,uDADF,2BAOF,sBAAKvD,UAAU,sBAAf,UACC,cAAC,EAAD,IACC,qBAAKA,UAAU,oCAAf,SAEEkB,KAAK4B,MAAMsH,aAAavG,WAAWY,KAAI,SAACP,EAAOF,GAC7C,OACE,cAAC,EAAD,CACE0C,MAAQ,EAAK5D,MAAMsH,aAAa1D,OAAS,GACzCmD,gBAAmB3F,EAAO3B,GAC1BuH,WAAc5F,EAAOR,KACrB8D,WAAexD,IAAS,EAAKlB,MAAMsH,aAAavG,WAAWlD,OAAO,EAAI,SAAS,EAAKmC,MAAMsH,aAAavG,WAAWG,EAAM,GAAGN,KAC3H4F,aAAiBtF,IAAS,EAAKlB,MAAMsH,aAAavG,WAAWlD,OAAO,EAAI,KAAK,EAAKmC,MAAMsH,aAAavG,WAAWG,EAAM,GAAGzB,GACzH+E,WAAuB,IAARtD,EAAW,SAAS,EAAKlB,MAAMsH,aAAavG,WAAWG,EAAM,GAAGN,KAC/E6F,aAAyB,IAARvF,EAAW,KAAK,EAAKlB,MAAMsH,aAAavG,WAAWG,EAAM,GAAGzB,GAC7E4G,WAAc,EAAKA,WAEnBtF,WAAc,EAAKf,MAAMsH,aAAavG,WACtC6F,iBAAoB,EAAKA,iBACzBC,sBAAyB,EAAKA,sBAC9BjF,aAAgB,EAAKA,cAJhBR,EAAO3B,SAWlB,qBAAKvC,UAAW,mEAAqEkB,KAAK4B,MAAMyH,UAAU,OAAO,IAAK/G,QAAStC,KAAKwJ,UAApI,SACGxJ,KAAK4B,MAAM0H,kB,GA3JQvK,IAAMC,WCEnB6K,E,4JACnB,WACE,OACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAO,oBAAoBC,UAAWE,W,GALzBlL,c,gCCPpC,oEAMMmL,EAAa,WACjBC,IAASC,OACL,cAAC,IAAD,CAAYC,QAASA,QAASC,QAAS,GAAvC,SACE,cAAC,IAAD,MAEJC,SAASC,eAAe,UAI5BN,IACEO,EAAOC,IAAIC,OAAO,YAAY,WAC5BT,Q","file":"static/js/main.b0293a4d.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgClose(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 15,\n    height: 15,\n    viewBox: \"0 0 15 15\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1A2734\",\n    fillOpacity: 0.351,\n    fillRule: \"evenodd\",\n    d: \"M14.58 2.049L13.167.635 7.562 6.239 1.958.635.544 2.049 6.15 7.653.544 13.257l1.414 1.414 5.604-5.604 5.605 5.604 1.413-1.414-5.604-5.604z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgClose);\nexport default __webpack_public_path__ + \"static/media/close.02f251f2.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\n\nexport default class Header extends React.Component{\n    render(){\n        return(\n            <div className=\"TestHeader flex flex-middle flex-center\">\n                <h1>Trello</h1>\n            </div>\n            \n        );\n    }\n\n}","import React from 'react';\n\nexport default class SideContainer extends React.Component{\n    render(){\n        return(\n            <div className=\" ph-20 pv-20 hp-100\">\n                Side Container\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { ReactComponent as CloseIcon } from '../../icons/close.svg';\nimport { Link } from 'react-router-dom';\n\nexport default class Board extends React.Component {\n    state ={\n        recentlyViewed : false\n    }\n    hendleClick = ()=>{\n        this.setState ({\n            recentlyViewed : true\n        });\n        this.props.onBoardClick();\n    }\n    removeBoard = (e)=>{\n        e.preventDefault();\n        e.stopPropagation();\n        this.props.removeBoard ();\n    }\n    render(){\n        return(\n            <Link to={'/boardDetails/'+ this.props.id }className=\"pr board border-light mt-15 ml-20 mb-15 board br-10 hover-effect flex flex-middle flex-center\" onClick = {this.props.isRecentViewedContainer ? null : this.hendleClick}>\n                <h1>{this.props.name}</h1>\n                <CloseIcon className=\"curP removeSpan mt-5\" onClick ={this.removeBoard}/>\n            </Link>\n        );\n    }\n}","import React from 'react';\nimport { v1 } from 'uuid';\nexport default class AddListOfStatus extends React.Component{\n    state = {\n        newStatus :\"\",\n        statusList : [\n            {\n                id : v1(),\n                name : 'Todo'\n            },\n            {\n                id : v1(),\n                name : 'Doing'\n            },\n            {\n                id : v1(),\n                name : 'Done'\n            }\n        ]\n    }\n    removeStatusFromList = (id)=>{\n        const statusList = this.state.statusList;\n        const index = statusList.findIndex((status)=>{\n            return status.id === id\n        });\n        statusList.splice(index,1);\n        this.setState({\n            statusList\n        }, ()=> {\n            this.props.updateStatusList(this.state.statusList);\n        })\n    }\n    changeNewStatus = (e)=>{\n        this.setState({\n            newStatus : e.target.value\n        })\n    }\n    addStatus = ()=>{\n        const statusList = [...this.state.statusList];\n        // if(statusList.indexOf(this.state.newStatus)<0){\n        //     statusList.push(this.state.newStatus);\n        // }\n        const status = {\n            id :v1(),\n            name :this.state.newStatus\n        }\n        statusList.push(status);\n        this.setState({\n            newStatus:\"\",\n            statusList:[...statusList]\n        }, ()=> {\n            this.props.updateStatusList(this.state.statusList);\n        }) \n\n    }\n\n    render(){\n        return(\n            <div className=\"flex flex-wrap flex-center\">\n            <div className =\"fs-20 mb-5\">Select Status List for Board:</div>\n                {\n                    this.state.statusList.map((status)=>{\n                        return(\n                            <Status\n                            name = {status.name}\n                            key ={status.id}\n                            removeStatus = {this.removeStatusFromList.bind(this,status.id)}\n                            />\n                        )  \n                    })\n                }\n                <div className =\"br-20 border-light bg-gray ml-5 mb-5 flex\">\n                    <input type=\"text\" className=\"br-20 ht-30 min-wt-100 pl-5 bg-gray\" placeholder=\"Enter New Status...\" onChange={this.changeNewStatus} value={this.state.newStatus}/>\n                    <div className={\"caption-color addButton mr-5 \" +(this.state.newStatus?\"activeAdd curP\":\"\") } onClick ={this.state.newStatus?this.addStatus:null}>+</div>\n                \n                </div>\n            </div>\n        )\n    }\n}\n\nclass Status extends React.Component{\n    render(){\n        return(\n            <div className =\"br-20 border-light pl-5 bg-gray ml-5 mb-5 flex\">\n                <div className=\"mt-5 mb-5 mr-5\">{this.props.name}</div>\n                {\n                    (this.props.name!== 'Todo') && \n                    <div className=\"curP caption-color mr-5 pt-5\" onClick ={this.props.removeStatus}>X</div>\n                }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { v1 } from 'uuid';\nimport { ReactComponent as CloseIcon } from '../../icons/close.svg';\nimport AddListOfStatus from './AddListOfStatus';\nexport default class CreateNewBoard extends React.Component{\n    state = {\n        inputName : \"\",\n        statusList : [\n            {\n                id : v1(),\n                name : 'Todo'\n            },\n            {\n                id : v1(),\n                name : 'Doing'\n            },\n            {\n                id : v1(),\n                name : 'Done'\n            }\n        ]\n    }\n    updateInputName = (e)=>{\n        this.setState({\n            inputName : e.target.value\n        })\n    }\n    SaveNewBoardName=()=>{\n        this.props.SendNewBoard(this.state)\n    }\n    updateStatusList = (statusList)=>{\n        this.setState({\n            statusList\n        })\n    }\n    render(){\n        return(\n            <div className=\"pf center createNewBoard pr-5 br-5 pb-10\" ref = {createBoardModal =>createBoardModal && createBoardModal.focus()}>\n                <CloseIcon className=\"curP closeSpan mt-5\" onClick ={this.props.toggleCreateNewBoardModal}/>\n                <form onSubmit={this.state.inputName?this.SaveNewBoardName:null} className = \"flex flex-column flex-middle flex-center pb-5\" >\n                    {/* <div className=\"fs-24\">Create new Board</div> */}\n                    <input \n                        type=\"text\" \n                        placeholder = \"Enter New Board Name...\" \n                        value = {this.state.inputName}\n                        onChange = {this.updateInputName}\n                        className = \"boardNameInput br-5 mb-10 pl-5 border-light mt-15\"\n                    />\n                    <AddListOfStatus updateStatusList = {this.updateStatusList} />\n                    <input \n                        type=\"button\"\n                        value = \"Create Board\"\n                        className ={\"createButton br-20 \" +(this.state.inputName?\"active curP\":\"inactive\") }\n                        onClick = {this.state.inputName?this.SaveNewBoardName:null} \n                    /> \n                </form>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Board from './Board';\nimport CreateNewBoard from './CreateNewBoard';\n\nexport default class PersonalBoardsContainer extends React.Component{\n    state ={\n        openCreateNewBoardModal : false\n    }\n    onBoardClick =(board)=>{\n        \n        this.props.updateRecentViewed(board);\n    }\n    toggleCreateNewBoardModal = ()=>{\n        this.setState({\n            openCreateNewBoardModal:!this.state.openCreateNewBoardModal\n        })\n    }\n    SendNewBoard = (board)=>{\n        this.toggleCreateNewBoardModal();\n        this.props.PushNewBoardInArray(board);\n    }\n    render(){\n        return(\n            <div>\n                <h2>{this.props.title}</h2>\n                <div className=\"box-shadow flex flex-wrap personalBoardsContainer\">\n                {\n                    this.props.boardList.map((board,index)=>{\n                        return(\n                            <Board \n                                name ={board.name}\n                                id = {board.id}\n                                key ={index}\n                                isRecentViewedContainer = {this.props.isRecentViewedContainer}\n                                onBoardClick = {this.onBoardClick.bind(this,board)}\n                                removeBoard = {this.props.removeBoard.bind(this,board.id)}\n                            />\n                        )\n                    })\n                }\n                {\n                    this.state.openCreateNewBoardModal && <div className=\"modal z-1 pf\">\n                    <CreateNewBoard\n                        toggleCreateNewBoardModal = {this.toggleCreateNewBoardModal}\n                        SendNewBoard = {this.SendNewBoard}\n                    />\n                    </div>\n                }\n                {\n                    !this.props.isRecentViewedContainer && <div className = \"addNewBoard border-light mt-15 ml-20 mb-15 board br-10 hover-effect flex flex-middle flex-center\"\n                    onClick={this.toggleCreateNewBoardModal}\n                    >\n                     +   \n                    </div> \n                }\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { v1 } from 'uuid';\nimport PersonalBoardsContainer from './PersonalBoardsContainer';\n\nexport default class BoardsContainer extends React.Component{\n    constructor(){\n        super();\n        let boards;\n        let recentBoards;\n        try {\n            boards = JSON.parse(localStorage.getItem(\"personalBoards\"));\n            recentBoards = JSON.parse(localStorage.getItem(\"recentViewedBoards\"));\n\n        }catch(e) {\n            boards = boards || [];\n            recentBoards = recentBoards || []\n        }\n        this.state = {\n            personalBoards: boards || [],\n            recentViewedBoards:recentBoards || []\n        }\n    }\n    updateRecentViewed = (board) =>{\n        const recentViewedBoards = this.state.recentViewedBoards;\n        const index = recentViewedBoards.findIndex((recentlyViewedBoard)=> {\n            return board.id === recentlyViewedBoard.id;\n        });\n        if(index > -1){\n            recentViewedBoards.splice(index,1);\n        }\n        recentViewedBoards.unshift(board);\n        this.setState({\n            recentViewedBoards\n        })\n        localStorage.setItem(\"recentViewedBoards\",JSON.stringify(recentViewedBoards));\n    }\n    PushNewBoardInArray = (newBoard) =>{\n        const board = {\n            id:v1(),\n            name : newBoard.inputName,\n            statusList : [...newBoard.statusList],\n            tasks : []\n        }\n       const personalBoards = this.state.personalBoards;\n       personalBoards.push(board);\n       this.setState({\n        personalBoards\n       })\n       localStorage.setItem(\"personalBoards\",JSON.stringify(personalBoards));\n    }\n    removeBoard = (id)=>{\n        const personalBoards = this.state.personalBoards;\n        const index=personalBoards.findIndex((board)=>{\n            return board.id===id;\n        })\n        personalBoards.splice(index,1);\n        this.setState({\n            personalBoards,\n        })\n        this.removeFromRecent(id);\n        localStorage.setItem(\"personalBoards\",JSON.stringify(personalBoards));\n    }\n    removeFromRecent = (id)=>{\n        const recentViewedBoards = this.state.recentViewedBoards;\n        const index=recentViewedBoards.findIndex((board)=>{\n            return board.id===id;\n        })\n        recentViewedBoards.splice(index,1);\n        this.setState({\n            recentViewedBoards,\n        })\n        localStorage.setItem(\"recentViewedBoards\",JSON.stringify(recentViewedBoards));\n\n    }\n    render(){\n        return(\n            <div className=\"box-shadow ph-20 pv-20 hp-100\">\n               {\n                   (this.state.recentViewedBoards.length > 0) &&\n                    <PersonalBoardsContainer\n                        boardList = {this.state.recentViewedBoards}\n                        isRecentViewedContainer ={true}\n                        title =\"Recently Viewed Boards\"\n                        removeBoard ={this.removeFromRecent}\n                    />\n                } \n                <PersonalBoardsContainer\n                    boardList = {this.state.personalBoards}\n                    updateRecentViewed = {this.updateRecentViewed}\n                    isRecentViewedContainer ={false}\n                    title =\"Personal Boards\"\n                    PushNewBoardInArray = {this.PushNewBoardInArray}\n                    removeBoard ={this.removeBoard}\n                />\n                <div className=\"slideUp\"></div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport SideContainer from './SideContainer';\nimport BoardsContainer from './BoardsContainer';\nexport default class MainContainer extends React.Component{\n    render(){\n        return (\n            <div className=\"grid hp-100\">\n                <SideContainer/>\n                <BoardsContainer/>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Header from './Header';\nimport MainContainer from './MainContainer';\n\nexport default class Home extends React.Component {\n   render() {\n     return (\n       <div className=\"\">\n         <Header/>\n         <MainContainer/>\n       </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class Task extends React.Component {\n    state = {\n        text : \"\"\n    }\n    render(){\n        return(\n            <div>\n                {\n                    this.props.display &&\n                    <div className=\"task border-light br-5 ph-10 pv-10 flex flex-between \">\n                    <div className=\"taskNameInput\">{this.props.currentTask.name}</div>\n                    <div>\n                        <div onClick={this.props.sendToPrev} className=\"fs-12 ml-5 curP theme-color\">{this.props.prevStatus !==\"Remove\"?\"Change to \"+ this.props.prevStatus : \"Remove\"}</div>\n                        <div onClick = {this.props.sendToNext} className=\"fs-12 ml-5 curP theme-color\">{this.props.nextStatus!==\"Remove\"?\"Change to \"+ this.props.nextStatus : \"Remove\"}</div>\n                    </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n}","import React from 'react';\n\nexport default class DivHeader extends React.Component {\n    state ={\n        editable:false,\n    }\n    toggleEditable = ()=>{\n        this.setState({\n            editable:!this.state.editable\n        })\n    }\n    setNewStatus = (e)=>{\n        this.toggleEditable();\n        const newStatusText = e.target.innerHTML;\n        this.props.changeStatusForItem(newStatusText,this.props.id);\n\n\n    }\n    checkEnterKey = (e) =>{\n        if(e.charCode === 13){\n            this.setNewStatus(e);\n        }\n    }\n    render(){\n        return(\n            <div className=\"DivHeader flex flex-center flex-between pt-5 br-5\">\n                <div className=\"fs-30 fBold flex-1 tCenter curT\"\n                    title = \"Double click to edit\"\n                    onDoubleClick = {this.toggleEditable}\n                    contentEditable = {this.state.editable}\n                    onBlur={this.setNewStatus}\n                    onKeyPress ={this.checkEnterKey}\n                >\n                    {this.props.text}\n                </div>\n                <div className = \"bg-white curP fs-40 br-5 sideAddBoardButton flex flex-center flex-middle\"\n                    title=\"Create new status\" \n                    onClick = {this.props.openCreateNewStatus}\n                >\n                    +\n                </div>\n                <div className = \"bg-white curP fs-40 br-5 pb-5 sideAddBoardButton flex flex-center flex-middle\"\n                    title=\"Remove status from Board\"\n                    onClick = {this.props.removeStatus}                    \n                >\n                    -\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { v1 } from 'uuid';\n\nexport default class AddTask extends React.Component {\n    state={\n        inputTaskText : \"\",    \n    }\n    task={\n        id : \"\",\n        name : \"\",\n        status : this.props.status\n    }\n\n    changeTaskText = (e)=>{\n        const inputTaskText = e.target.value;\n        this.setState({\n            inputTaskText\n        })\n    }\n\n    createTask = (e)=>{\n        e.preventDefault();\n        const task= {...this.task};\n        task.name=this.state.inputTaskText;\n        task.id = v1();\n        this.setState({\n            inputTaskText : \"\"\n        },()=>{\n            this.props.addTask(task);\n        })\n\n\n    }\n\n    render(){\n        return(\n            <form onSubmit={this.createTask} className=\"flex flex-column\">\n                <input type=\"text\"\n                    className = \"border-light br-5 ph-10 pv-10\" \n                    onChange ={this.changeTaskText} value={this.state.inputTaskText}\n                    placeholder = \"Enter task to be done...\"\n                />\n                <input type=\"button\" \n                    className={\"addTaskButton br-5 \" + (this.state.inputTaskText ? \"active\" : \"inactive\")}\n                    value=\"Add Task\"\n                    onClick = {this.state.inputTaskText ?this.createTask:null}\n                />\n            </form>\n        )\n    }\n}","import React from 'react';\nimport { ReactComponent as CloseIcon } from '../../../icons/close.svg';\n\nexport default class AddStatus extends React.Component {\n    state = {\n        inputName : \"\"\n    }\n    updateInputName = (e)=>{\n        this.setState({\n            inputName : e.target.value\n        })\n    }\n    addStatusAfter = (e)=>{\n        e.preventDefault();\n        this.props.addStatusAfter(this.state.inputName);\n        this.setState({\n            inputName : ''\n        },this.props.toggleShowAddStatusModal)\n    \n    }\n    render(){\n        return(\n            <div className=\"modal pf\">\n                <div className=\"pf center createNewBoard pr-5 br-5 pb-10\" ref = {createStatusModal =>createStatusModal && createStatusModal.focus()}>\n                    <CloseIcon className=\"curP closeSpan mt-5\" onClick ={this.props.toggleShowAddStatusModal}/>\n                    <form onSubmit={this.state.inputName?this.addStatusAfter:null} className = \"flex flex-column flex-middle flex-center pb-5\" >\n                        {/* <div className=\"fs-24\">Create new Board</div> */}\n                        <input \n                            type=\"text\" \n                            placeholder = \"Enter New status Name...\" \n                            value = {this.state.inputName}\n                            onChange = {this.updateInputName}\n                            className = \"boardNameInput br-5 mb-10 pl-5 border-light mt-15\"\n                        />\n                        <input \n                            type=\"button\"\n                            value = \"Create new Status\"\n                            className ={\"createButton br-20 \" +(this.state.inputName?\"active curP\":\"inactive\") }\n                            onClick = {this.state.inputName?this.addStatusAfter:null} \n                        /> \n                    </form>\n                </div>               \n            </div>\n        )\n    }\n}","import React from 'react';\nimport { v1 } from 'uuid';\nimport Task from './Task';\nimport DivHeader from './DivHeader';\nimport AddTask from './AddTask';\nimport AddStatus from './AddStatus';\n\nexport default class ToDoTasks extends React.Component {\n    constructor (props){\n        super(props)\n       this.state={\n            tasks : [...this.props.tasks],\n            statusId : this.props.currentStatusId,\n            statusName :this.props.statusName,\n            nextStatus :this.props.nextStatus,\n            nextStatusId :this.props.nextStatusId,\n            prevStatus :this.props.prevStatus,\n            prevStatusId :this.props.prevStatusId,\n            showAddStatusModal : false \n        }      \n    }\n    addTask = (newTask)=>{\n        const tasks = [...this.state.tasks];\n        // tasks.findIndex((task)=>{\n        //     return task.id === newTask.id\n        // })\n        tasks.push(newTask);\n        this.setState({\n            tasks           \n        },()=>{\n            this.props.addToBoard(tasks,\"tasks\");\n        })\n    }\n    static getDerivedStateFromProps(nextProps, props) {\n        return {\n            tasks: nextProps.tasks,\n            statusName :nextProps.statusName,\n            nextStatus :nextProps.nextStatus,\n            prevStatus :nextProps.prevStatus,\n            nextStatusId :nextProps.nextStatusId,\n            prevStatusId : nextProps.prevStatusId\n        }\n    }\n    sendToNext = (id)=>{\n        const tasks =[...this.state.tasks];\n        console.log(\"this.props.statusList\",this.props.statusList)\n        const index=tasks.findIndex((task)=>{\n            return task.id === id\n        })\n        if(this.state.nextStatusId === '-1'){\n            tasks.splice(index,1)\n        }else{\n            tasks[index].status = this.state.nextStatusId;\n        }\n        this.setState({\n            tasks\n        },()=>{\n            this.props.addToBoard(tasks,\"tasks\");\n        })\n        \n    }\n    sendToPrev = (id)=>{\n        const tasks =[...this.state.tasks];\n        const index=tasks.findIndex((task)=>{\n            return task.id === id\n        })\n        if(this.state.prevStatusId === '-1'){\n            tasks.splice(index,1)\n        }else{\n            tasks[index].status = this.state.prevStatusId;\n        }\n        this.setState({\n            tasks\n        },()=>{\n            this.props.addToBoard(tasks,\"tasks\");\n        })\n    }\n    toggleShowAddStatusModal =()=>{\n        this.setState({\n            showAddStatusModal : !this.state.showAddStatusModal\n        })\n\n    }\n    changeStatusForItem = (updatedStatusText,id)=>{\n        this.props.updateStatusName(updatedStatusText,id);\n    }\n    addStatusAfter = (newStatusText)=>{\n       const newStatus={\n            id : v1(),\n            name : newStatusText\n        }\n        this.props.addStatusAfterCurrent(newStatus,this.state.statusId)\n    }\n    \n    render(){\n        return(\n            <div className=\"ToDoTasksDiv border-light pl-5 pr-5 pb-5 mt-5 ml-5 br-5\">\n                <DivHeader \n                text={this.state.statusName}\n                id = {this.state.statusId}\n                openCreateNewStatus = {this.toggleShowAddStatusModal}\n                changeStatusForItem = {this.changeStatusForItem}\n                removeStatus ={this.props.removeStatus.bind(this,this.state.statusId)}\n                />\n                {\n                    this.state.showAddStatusModal && \n                    <AddStatus\n                    toggleShowAddStatusModal = {this.toggleShowAddStatusModal}\n                    addStatusAfter = {this.addStatusAfter} \n                    />\n                }\n                {\n                    this.state.tasks.map((task,index)=>{\n                       return( <Task\n                        currentTask ={task}\n                        display ={this.state.statusId === task.status}\n                        status = {this.state.statusName}\n                        nextStatus = {this.state.nextStatus}\n                        prevStatus ={this.state.prevStatus}\n                        key = {task.id}\n                        sendToNext ={this.sendToNext.bind(this,task.id)}\n                        sendToPrev ={this.sendToPrev.bind(this,task.id)}\n                        />\n                       )\n                    })\n                }\n                {\n                    (this.state.statusId === this.props.statusList[0].id) && \n                    <AddTask \n                        addTask={this.addTask}\n                        status={this.props.statusList[0].id}\n                    />\n                }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport ListTasks from './ListTasks';\nimport Header from '../Header'\nimport { Link } from 'react-router-dom';\n\nexport default class Home extends React.Component {\n  constructor(props){\n    super(props);\n    const boardId=this.props.match.params.id;\n    let showError = false\n    let boards;\n    try {\n        boards = JSON.parse(localStorage.getItem(\"personalBoards\")) || [];\n\n    }catch(e) {\n        boards = boards || [];\n    }\n    const currentBoard = boards.find((board)=>{\n      return board.id===boardId\n    })\n    if(!currentBoard){\n      showError =true\n    }\n    this.state={\n      showError:showError,\n      boards:boards,\n      boardId:boardId,\n      currentBoard : currentBoard,\n      showToast : false,\n      toastMsg : \"\"\n    }\n  }\n  addToBoard = (changedValue,fieldNameToChange) =>{\n    console.log(\"In addToBoard =>\\nName of fieldChanged:\",fieldNameToChange, \"\\nchanged field value:\",changedValue );\n    //Add new task to board in localStorage    \n    const boards =this.state.boards;\n    const boardId = this.state.boardId;\n    let recentBoards;\n    //Add changedValue to personalBoards in localStorage\n    const index = boards.findIndex((board)=>{\n      return board.id === boardId\n    })\n    boards[index][fieldNameToChange]=[...changedValue]    \n    localStorage.setItem(\"personalBoards\",JSON.stringify(boards)); \n    //Add changedValue to recentViewedBoards in localStorage\n    try {\n      recentBoards = JSON.parse(localStorage.getItem(\"recentViewedBoards\")) || [];\n    }catch(e){\n      recentBoards = [];\n    }\n    const recentIndex = recentBoards.findIndex((board)=>{\n      return board.id === boardId\n    })\n    if(recentIndex > -1){\n      recentBoards[recentIndex][fieldNameToChange]=[...changedValue];\n    }else{\n      recentBoards.push(boards[index]);\n    }\n    boards.push()   \n    localStorage.setItem(\"recentViewedBoards\",JSON.stringify(recentBoards));\n    this.setState({\n      boards\n    })\n  }  \n\n  updateStatusName =(updatedStatusText,id)=>{\n    const statusList = this.state.currentBoard.statusList;\n    const indexOfChange = statusList.findIndex((status)=>{\n      return status.id === id\n      })\n    statusList[indexOfChange].name = updatedStatusText;\n    this.addToBoard(statusList,\"statusList\");\n  }\n\n  addStatusAfterCurrent =(newStatus,currentId)=>{\n    const statusList = this.state.currentBoard.statusList;\n    const indexOfChange = statusList.findIndex((status)=>{\n      return status.id === currentId\n      })\n    statusList.splice(indexOfChange+1,0,newStatus);    \n    this.addToBoard(statusList,\"statusList\");\n  }\n  removeStatus = (id)=>{\n    const statusList = this.state.currentBoard.statusList;\n    if(statusList.length === 1){\n      this.setState({\n        showToast: true,\n        toastMsg : \"This is last status list You need to delete the Board itself\"\n      }, ()=>  {\n        setTimeout(()=> {\n          this.hideToast()\n        }, 4000)\n      })\n    }else{\n      let indexOfChange = statusList.findIndex((status)=>{\n        return status.id === id\n        })\n      const tasks =this.state.currentBoard.tasks;\n      const indexOfTask = tasks.findIndex((task)=>{\n        return task.status === id\n        })\n      if(indexOfTask < 0){\n        statusList.splice(indexOfChange,1);    \n        this.addToBoard(statusList,\"statusList\");\n      }else{\n        this.setState({\n          showToast: true,\n          toastMsg : \"Remove all task from status list to Delete it from board.\"\n        }, ()=>  {\n          setTimeout(()=> {\n            this.hideToast()\n          }, 4000)\n        })\n      }\n    }\n  }\n  hideToast = ()=> {\n    this.setState({\n      showToast: false,\n      toastMsg:\"\"\n    })\n  }\n\n   render() {\n     if(this.state.showError){\n       return(\n          <Link to='/' >\n            <h1>Board Does not Exists</h1>\n            click to go home page\n          </Link>\n       )\n     };\n     return (\n        <div className=\"mainDivBoardDetails\">\n         <Header/>\n          <div className=\"currentBoardDiv hp-100 flex mt-20\">\n          {\n            this.state.currentBoard.statusList.map((status,index)=>{\n              return(\n                <ListTasks\n                  tasks= {this.state.currentBoard.tasks || []}\n                  currentStatusId = {status.id}\n                  statusName = {status.name}\n                  nextStatus = {(index===(this.state.currentBoard.statusList.length-1))?\"Remove\":this.state.currentBoard.statusList[index+1].name}\n                  nextStatusId = {(index===(this.state.currentBoard.statusList.length-1))?\"-1\":this.state.currentBoard.statusList[index+1].id}\n                  prevStatus = {(index===0)?\"Remove\":this.state.currentBoard.statusList[index-1].name}\n                  prevStatusId = {(index===0)?\"-1\":this.state.currentBoard.statusList[index-1].id}\n                  addToBoard = {this.addToBoard}\n                  key={status.id}\n                  statusList = {this.state.currentBoard.statusList}\n                  updateStatusName = {this.updateStatusName}\n                  addStatusAfterCurrent = {this.addStatusAfterCurrent}\n                  removeStatus = {this.removeStatus}\n                />\n              )\n            })\n          }\n          </div>\n          {\n            <div className={\"flex flex-middle flex-center toast-new pf br-5 fs-15 pl-5 pr-5 \" + (this.state.showToast?'show':'')} onClick={this.hideToast}>\n              {this.state.toastMsg}\n            </div>\n          }\n        </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Route, Switch } from 'react-router-dom';\n\nimport './styles/app.scss';\nimport Test from './pages/test';\nimport boardDetails from './pages/test/boardDetails';\n\nexport default class Routes extends Component {\n  render() {\n    return (\n        <Switch>\n          <Route exact path=\"/\" component={Test} />\n          <Route exact path = \"/boardDetails/:id\" component={boardDetails}/>\n        </Switch>\n    )\n  }\n}","/* eslint-disable no-restricted-globals */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport Routes from './Routes';\n\nconst renderRoot = () => {\n  ReactDOM.render(\n      <HashRouter history={history} context={{}}>\n        <Routes />\n      </HashRouter>,\n    document.getElementById('root')\n  );\n};\n\nrenderRoot();\n  module.hot.accept('./Routes', () => {\n    renderRoot();\n  });\n"],"sourceRoot":""}